services:
  budget-mcp-server:
    build: .
    image: budget-mcp-server:latest
    container_name: budget-mcp-server
    profiles:
      - prod
    command: >
      bash -c "uv run python3 run.py"
    environment:
      - APP_ENV=production
      - DATABASE_FILE=/app/data/budget_app.duckdb
      - HOST=0.0.0.0
      - PORT=8000
      - MCP_PATH=/mcp
      - HTTPS_ENABLED=true
      - BEARER_TOKEN=${BEARER_TOKEN}
    ports:
      - "8000:8000"  # HTTP port
    volumes:
      - budget_data:/app/data
      - ./certs:/app/certs:ro
    restart: unless-stopped
    networks:
      - default

  budget-mcp-server-dev:
    build: .
    image: budget-mcp-server:dev
    container_name: budget-mcp-server-dev
    profiles:
      - dev
    command: >
      bash -c "if [ -f /usr/local/share/ca-certificates/server.crt ]; then update-ca-certificates; fi && uv run python3 run.py"
    environment:
      - APP_ENV=development
      - DATABASE_FILE=/app/data/budget_app.duckdb
      - HOST=0.0.0.0
      - PORT=8000
      - MCP_PATH=/mcp
      - HTTPS_ENABLED=false
      - SSL_KEY_FILE=/app/certs/server.key
      - BEARER_TOKEN=${BEARER_TOKEN}
    ports:
      - "8000:8000"
    volumes:
      - budget_data:/app/data
      - ./certs/server.crt:/usr/local/share/ca-certificates/server.crt:ro
      - ./certs/server.key:/app/certs/server.key:ro
      - .:/app
    restart: unless-stopped
    networks:
      - default

volumes:
  budget_data:

networks:
  default:
    name: budget-mcp-server_default
